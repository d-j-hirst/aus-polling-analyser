Polling Analyser to-do:
-Add data display step by step to the webpage (* indicates not release-critical):
-Build FAQ/methodology page outlines
-Develop documentation detailing the forecasting methodology
 -FAQs
  -What's the point?
  -What if you're wrong?
  -What about this hypothetical event?
  -What's the difference between the regular forecast and the now-cast?
  -What does it really mean for there to be an X% chance of winning an election/seat?
  -Why don't the vote totals add to 100%? Why don't the seat totals add to the number of seats in Parliament?
  -How should I interpret the different two-party-preferred scenarios?
 -methodology documentation (probably overall guide for now and fill in details later)
  -include link to source code
 -glossary
 -about page
-Footer
 -Legal stuff
 -Somewhere acknowledge used code/modules (e.g. unzip, json, scikit-learn)
-investigate using average errors for mix factors
-investigate seat elasticity and its predictivity
-Prepare commentary page
-Make example copy of data outputs in git repo

Immediately before release:
 -Check for any new voices candidates and betting odds for seats and election timing, then create final pre-release forecast.
 -Make polling analyser repo public
 -Remove login protections

-Soon after release:
 -Script to auto-check seat betting odds.
  *options to sort in various ways by % chance, alphabetical, state, margin
 -Graph for prediction over time - for overall forecast and then maybe individual seats
 -cartogram, maybe map view depending on feasibility
 -Individual seats winner bar for 2cp scenarios (maybe?)
 -Anything non-critical above not done before release.
-Before SA election day, if possible:
-Before federal election day, if possible:
 -Advanced simulations!
  -Start by organising past election data at booth-level
  -Need to load conversions between equivalent seats
  -Then organise the existing election

